# Properties for akka.kafka.ConsumerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  kafka.consumer {
    # Tuning property of scheduled polls.
    poll-interval = 50ms

    # Tuning property of the `KafkaConsumer.poll` parameter.
    # Note that non-zero value means that blocking of the thread that
    # is executing the stage will be blocked.
    poll-timeout = 50ms

    # The stage will be await outstanding offset commit requests before
    # shutting down, but if that takes longer than this timeout it will
    # stop forcefully.
    stop-timeout = 30s

    # How long to wait for `KafkaConsumer.close`
    close-timeout = 20s

    # If offset commit requests are not completed within this timeout
    # the returned Future is completed `TimeoutException`.
    commit-timeout = 15s

    # If the KafkaConsumer can't connect to the broker the poll will be
    # aborted after this timeout. The KafkaConsumerActor will throw
    # org.apache.kafka.common.errors.WakeupException, which can be handled
    # with Actor supervision strategy.
    wakeup-timeout = 10s

    # Fully qualified config path which holds the dispatcher configuration
    # to be used by the KafkaConsumerActor. Some blocking may occur.
    use-dispatcher = "akka.kafka.default-dispatcher"

    # Properties defined by org.apache.kafka.clients.consumer.ConsumerConfig
    # can be defined in this configuration section.
    kafka-clients {
      bootstrap.servers = "broker-5-fvylx0l6bzhbwxpw.kafka.svc01.us-south.eventstreams.cloud.ibm.com:9093,broker-4-fvylx0l6bzhbwxpw.kafka.svc01.us-south.eventstreams.cloud.ibm.com:9093,broker-2-fvylx0l6bzhbwxpw.kafka.svc01.us-south.eventstreams.cloud.ibm.com:9093,broker-0-fvylx0l6bzhbwxpw.kafka.svc01.us-south.eventstreams.cloud.ibm.com:9093,broker-1-fvylx0l6bzhbwxpw.kafka.svc01.us-south.eventstreams.cloud.ibm.com:9093,broker-3-fvylx0l6bzhbwxpw.kafka.svc01.us-south.eventstreams.cloud.ibm.com:9093"
      group.id = "myGroup"

      auto.offset.reset = "earliest"
      #auto.offset.reset = "latest"
    }

    myTopic = "sourceTopic"
    sasl.jaas.config = "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<password>\";",
    sasl.mechanism = "PLAIN"
    security.protocol = "SASL_SSL"
    ssl.protocol = "TLSv1.2"
  }
}